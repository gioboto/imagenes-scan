#!/usr/bin/env python3
import os
import concurrent.futures
import leeguarda
#from concurrent.futures import ThreadPoolExecutor

def leer_carpeta(carpeta):
    print(f"Leyendo archivos en la carpeta: {carpeta}")
    valores_imagen = []
    for ruta_actual, carpetas, archivos in os.walk(carpeta):
        for archivo in archivos[:5]:
            ruta_completa = os.path.join(ruta_actual, archivo)
            with open(ruta_completa, 'r') as f:
                contenido = leeguarda.obtiene_atributos_imagen(ruta_completa)
                valores_imagen.append(contenido)
                #contenido = f.read()
                #print(f"Contenido de {archivo}: {contenido"""[:50]"""}...")
                print(f"Contenido de {archivo}: {contenido}")
    return valores_imagen
#Lista de carpetas  aleer 

carpetas = ['/home/usuario/Downloads/']

num_hilos = 3

#LIsta para almacenar hilos
hilos = []

# Utiliza ThreadPoolExecutor para hilos de manera eficiente

with concurrent.futures.ThreadPoolExecutor(max_workers=num_hilos) as executor:
    #inicia un hilo or cada carpeta
    futuros = {executor.submit(leer_carpeta, carpeta): carpeta for carpeta in carpetas}
    
    # esperar que todos los hilos terminen
    for futuro in concurrent.futures.as_completed(futuros):
        carpeta = futuros[futuro]
        try:
            valores_imagen = futuro.result()
            print(f"valores imagen en la carpeta {carpeta}:")
            for valores_image in valores_imagen:
                print(valores_image)
            nombre_archivo_json = 'atributos_totales.json'
            leeguarda.guarda_json(valores_imagen, nombre_archivo_json)
        except Exception as e:
            print(f"Error en carpeta {carpeta} : {e}")
    
print("todo hilo terminado")